apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets{
        main.java.srcDir 'src/main/aidl/'
    }
}

dependencies {

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:26.1.0'
    androidTestImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    compileOnly files('libs/dcdz-common-toolkits-1.0.0.jar')
    testImplementation 'junit:junit:4.12'
}

def SDK_NAME = "dcdz-app-device";
def SDK_VERSION = "-1.0.0";
def sdkDestinationPath = "build";
def zipFile = file('build/intermediates/intermediate-jars/release/classes.jar')

task deleteBuild(type: Delete) {
    delete sdkDestinationPath + SDK_NAME + SDK_VERSION + ".jar"
}

task makeJar(type: Jar) {
    from zipTree(zipFile)
    from fileTree(dir: 'src/main')
    baseName = SDK_NAME + SDK_VERSION
    destinationDir = file(sdkDestinationPath)
}

makeJar.dependsOn(deleteBuild, build)